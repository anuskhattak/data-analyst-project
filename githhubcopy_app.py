# -*- coding: utf-8 -*-
"""githhubcopy.app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cSEODjpMsrttbltOeXPkkO8QF0ra96Pc
"""

import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

st.set_page_config(page_title="Netflix Dataset Dashboard", layout="wide")

# Load dataset
df = pd.read_csv("Netflix Dataset.csv")

# Data cleaning
df['Category'] = df['Category'].astype('category')
df['Country'] = df['Country'].astype('category')
df['Rating'] = df['Rating'].astype('category')
df['Type'] = df['Type'].astype('category')
df['Release_Date'] = pd.to_datetime(df['Release_Date'], errors='coerce')

df['Director'] = df['Director'].fillna('Unknown')
df['Cast'] = df['Cast'].fillna('Unknown Cast')
df['Country'] = df['Country'].cat.add_categories(['Unknown']).fillna('Unknown')
median_date = df['Release_Date'].median()
df['Release_Date'] = df['Release_Date'].fillna(median_date)
df['Rating'] = df['Rating'].cat.add_categories(['Unknown Rating']).fillna('Unknown Rating')

df[['Duration_Int', 'Duration_Unit']] = df['Duration'].str.extract(r'(\d+)\s*(\w+)')
df['Duration_Int'] = pd.to_numeric(df['Duration_Int'], errors='coerce')
df['Year'] = df['Release_Date'].dt.year

st.title("ðŸ“Š Netflix Dataset Dashboard")

# Sidebar for navigation
menu = st.sidebar.selectbox("Select Question", [
    "Q1: House of Cards Info",
    "Q2: Year with Most Releases",
    "Q3: Count of Movies vs TV Shows",
    "Q4: Movies Released in 2000",
    "Q5: TV Shows Released in India",
    "Q6: Top 10 Directors",
    "Q7: Movies (Comedies) or UK Shows",
    "Q8: Tom Cruise Movies/Shows",
    "Q9: Different Ratings",
    "Q9.1: Movies with TV-14 in Canada",
    "Q9.2: TV Shows with R after 2018",
    "Q10: Maximum Duration",
    "Q11: Country with Most TV Shows",
    "Q12: Sort Dataset by Year",
    "Q13: Movies (Dramas) or TV Kids Shows"
])

if menu == "Q1: House of Cards Info":
    st.subheader("House of Cards Info")
    st.write(df[df['Title'] == 'House of Cards'][['Show_Id','Title','Director']])

elif menu == "Q2: Year with Most Releases":
    st.subheader("Year with Highest Releases")
    year_count = df['Year'].value_counts()
    st.bar_chart(year_count)

elif menu == "Q3: Count of Movies vs TV Shows":
    st.subheader("Movies vs TV Shows")
    st.bar_chart(df['Category'].value_counts())

elif menu == "Q4: Movies Released in 2000":
    st.subheader("Movies Released in 2000")
    st.write(df[(df['Category'] == 'Movie') & (df['Year'] == 2000)])

elif menu == "Q5: TV Shows Released in India":
    st.subheader("TV Shows in India")
    st.write(df[(df['Category'] == 'TV Show') & (df['Country'] == 'India')]['Title'])

elif menu == "Q6: Top 10 Directors":
    st.subheader("Top 10 Directors")
    top_director = df['Director'].value_counts().head(10)
    fig, ax = plt.subplots()
    sns.barplot(x=top_director.values, y=top_director.index, ax=ax)
    st.pyplot(fig)

elif menu == "Q7: Movies (Comedies) or UK Shows":
    st.subheader("Movies (Comedies) or UK Shows")
    st.write(df[(df['Category']=='Movie') & (df['Type']=='Comedies') | (df['Country']=='United Kingdom')])

elif menu == "Q8: Tom Cruise Movies/Shows":
    st.subheader("Tom Cruise Movies/Shows")
    st.write(len(df[df['Cast'].str.contains('Tom Cruise', na=False)]))

elif menu == "Q9: Different Ratings":
    st.subheader("Different Ratings on Netflix")
    st.write(sorted(df['Rating'].unique()))

elif menu == "Q9.1: Movies with TV-14 in Canada":
    st.subheader("Movies with TV-14 in Canada")
    st.write(len(df[(df['Category']=='Movie') & (df['Rating']=='TV-14') & (df['Country']=='Canada')]))

elif menu == "Q9.2: TV Shows with R after 2018":
    st.subheader("TV Shows with R after 2018")
    st.write(len(df[(df['Category']=='TV Show') & (df['Rating']=='R') & (df['Year']>2018)]))

elif menu == "Q10: Maximum Duration":
    st.subheader("Maximum Duration")
    st.write(df['Duration_Int'].max())

elif menu == "Q11: Country with Most TV Shows":
    st.subheader("Country with Most TV Shows")
    tv_shows = df[df['Category']=='TV Show']
    st.write(tv_shows['Country'].value_counts().idxmax(),
             tv_shows['Country'].value_counts().max())

elif menu == "Q12: Sort Dataset by Year":
    st.subheader("Sorted by Year")
    st.write(df.sort_values(by='Year', ascending=True).head(10))

elif menu == "Q13: Movies (Dramas) or TV Kids Shows":
    st.subheader("Movies (Dramas) or Kids TV Shows")
    st.write(df[((df['Category']=='Movie') & (df['Type']=='Dramas')) |
                ((df['Category']=='TV Show') & (df['Type']=="Kids' TV"))])